{"ast":null,"code":"import _toConsumableArray from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/caio/Projects/Javascript/trivia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router';import actions from'../actions';import MainHeader from'../components/MainHeader';import Loading from'../components/Loading';import'../Game.css';var Game=/*#__PURE__*/function(_React$Component){_inherits(Game,_React$Component);function Game(){var _this;_classCallCheck(this,Game);_this=_possibleConstructorReturn(this,_getPrototypeOf(Game).call(this));_this.state={isClicked:false,isDisabled:false,timer:30,index:0};_this.renderQuestion=_this.renderQuestion.bind(_assertThisInitialized(_this));_this.handleAnswer=_this.handleAnswer.bind(_assertThisInitialized(_this));_this.timer=_this.timer.bind(_assertThisInitialized(_this));_this.nextQuestion=_this.nextQuestion.bind(_assertThisInitialized(_this));return _this;}_createClass(Game,[{key:\"componentDidMount\",value:function componentDidMount(){this.timer();}},{key:\"timer\",value:function timer(){var _this2=this;var oneSecond=1000;this.decrementTime=setInterval(function(){var timer=_this2.state.timer;if(!timer){clearInterval(_this2.decrementTime);_this2.setState({isDisabled:true,isClicked:true});}else{_this2.setState({timer:timer-1});}},oneSecond);}},{key:\"nextQuestion\",value:function nextQuestion(){var index=this.state.index;var limit=4;if(index===limit){var ranking=JSON.parse(localStorage.getItem('ranking'));var _JSON$parse=JSON.parse(localStorage.getItem('state')),player=_JSON$parse.player;if(!ranking){var array=[player];localStorage.setItem('ranking',JSON.stringify(array));}else{ranking.push(player);localStorage.setItem('ranking',JSON.stringify(ranking));}return this.setState({lastQuestion:true});}this.setState({index:index+1,isClicked:false,timer:30,isDisabled:false},this.timer);}},{key:\"handleAnswer\",value:function handleAnswer(_ref){var target=_ref.target;clearInterval(this.decrementTime);this.setState({isClicked:true,isDisabled:true},function(){var elementCorrect=document.querySelector('.correct').textContent;var state=JSON.parse(localStorage.getItem('state'));if(elementCorrect===target.textContent){state.player.score+=10;state.player.assertions+=1;}localStorage.setItem('state',JSON.stringify(state));});}},{key:\"renderQuestion\",value:function renderQuestion(_ref2){var _this3=this;var question=_ref2.question,correctAnswer=_ref2.correct_answer,incorrectAnswers=_ref2.incorrect_answers,category=_ref2.category;var _this$state=this.state,isClicked=_this$state.isClicked,isDisabled=_this$state.isDisabled;return React.createElement(\"div\",null,React.createElement(\"h3\",{\"data-testid\":\"question-category\"},category),React.createElement(\"h3\",{\"data-testid\":\"question-text\"},question),React.createElement(\"div\",{className:\"answer-container\"},[].concat(_toConsumableArray(incorrectAnswers),[correctAnswer]).sort().map(function(option,index){return React.createElement(\"button\",{key:index,className:isClicked&&(correctAnswer===option?'correct':'wrong'),type:\"button\",id:correctAnswer===option?'correct-answer':\"wrong-answer-\".concat(index),\"data-testid\":correctAnswer===option?'correct-answer':\"wrong-answer-\".concat(index),onClick:_this3.handleAnswer,disabled:isDisabled},option);})));}},{key:\"render\",value:function render(){var questions=this.props.questions;var _this$state2=this.state,timer=_this$state2.timer,isClicked=_this$state2.isClicked,index=_this$state2.index,lastQuestion=_this$state2.lastQuestion;if(lastQuestion)return React.createElement(Redirect,{to:\"/feedback\"});return React.createElement(\"div\",{className:\"main-content\"},React.createElement(\"div\",{className:\"tablet-div\"},React.createElement(MainHeader,null),React.createElement(\"main\",null,questions.length?this.renderQuestion(questions[index]):React.createElement(Loading,null)),React.createElement(\"p\",null,React.createElement(\"span\",null,timer)),isClicked&&React.createElement(\"button\",{className:\"button-next\",\"data-testid\":\"btn-next\",type:\"button\",onClick:this.nextQuestion},\"Pr\\xF3xima\")));}}]);return Game;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchTriviaQuestions:function fetchTriviaQuestions(){return dispatch(actions.fetchTriviaQuestions());}};};var mapStateToProps=function mapStateToProps(state){return{questions:state.quiz.questions};};export default connect(mapStateToProps,mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/caio/Projects/Javascript/trivia/src/pages/Game.jsx"],"names":["React","connect","Redirect","actions","MainHeader","Loading","Game","state","isClicked","isDisabled","timer","index","renderQuestion","bind","handleAnswer","nextQuestion","oneSecond","decrementTime","setInterval","clearInterval","setState","limit","ranking","JSON","parse","localStorage","getItem","player","array","setItem","stringify","push","lastQuestion","target","elementCorrect","document","querySelector","textContent","score","assertions","question","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","category","sort","map","option","questions","props","length","Component","mapDispatchToProps","dispatch","fetchTriviaQuestions","mapStateToProps","quiz"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport actions from '../actions';\nimport MainHeader from '../components/MainHeader';\nimport Loading from '../components/Loading';\nimport '../Game.css';\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isClicked: false,\n      isDisabled: false,\n      timer: 30,\n      index: 0,\n    };\n\n    this.renderQuestion = this.renderQuestion.bind(this);\n    this.handleAnswer = this.handleAnswer.bind(this);\n    this.timer = this.timer.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer();\n  }\n\n  timer() {\n    const oneSecond = 1000;\n    this.decrementTime = setInterval(() => {\n      const { timer } = this.state;\n      if (!timer) {\n        clearInterval(this.decrementTime);\n        this.setState({ isDisabled: true, isClicked: true });\n      } else {\n        this.setState({ timer: timer - 1 });\n      }\n    }, oneSecond);\n  }\n\n  nextQuestion() {\n    const { index } = this.state;\n    const limit = 4;\n    if (index === limit) {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      const { player } = JSON.parse(localStorage.getItem('state'));\n      if (!ranking) {\n        const array = [player];\n        localStorage.setItem('ranking', JSON.stringify(array));\n      } else {\n        ranking.push(player);\n        localStorage.setItem('ranking', JSON.stringify(ranking));\n      }\n      return this.setState({ lastQuestion: true });\n    }\n    this.setState({\n      index: (index + 1), isClicked: false, timer: 30, isDisabled: false }, this.timer);\n  }\n\n  handleAnswer({ target }) {\n    clearInterval(this.decrementTime);\n    this.setState({ isClicked: true, isDisabled: true }, () => {\n      const elementCorrect = document.querySelector('.correct').textContent;\n      const state = JSON.parse(localStorage.getItem('state'));\n      if (elementCorrect === target.textContent) {\n        state.player.score += 10;\n        state.player.assertions += 1;\n      }\n      localStorage.setItem('state', JSON.stringify(state));\n    });\n  }\n\n  renderQuestion({ question,\n    correct_answer: correctAnswer, incorrect_answers: incorrectAnswers, category }) {\n    const { isClicked, isDisabled } = this.state;\n    return (\n      <div>\n        <h3 data-testid=\"question-category\">{category}</h3>\n        <h3 data-testid=\"question-text\">{question}</h3>\n        <div className=\"answer-container\">\n          {\n            [...incorrectAnswers, correctAnswer].sort().map((option, index) => (\n              <button\n                key={ index }\n                className={ (isClicked) && ((\n                  correctAnswer === option) ? 'correct' : 'wrong') }\n                type=\"button\"\n                id={\n                  correctAnswer === option ? 'correct-answer' : `wrong-answer-${index}`\n                }\n                data-testid={\n                  correctAnswer === option ? 'correct-answer' : `wrong-answer-${index}`\n                }\n                onClick={ this.handleAnswer }\n                disabled={ isDisabled }\n              >\n                {option}\n              </button>\n            ))\n          }\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { questions } = this.props;\n    const { timer, isClicked, index, lastQuestion } = this.state;\n    if (lastQuestion) return <Redirect to=\"/feedback\" />;\n    return (\n      <div className=\"main-content\">\n        <div className=\"tablet-div\">\n          <MainHeader />\n          <main>\n            {\n              (questions.length) ? this.renderQuestion(questions[index]) : (\n                <Loading />)\n            }\n          </main>\n          <p>\n            <span>{timer}</span>\n          </p>\n          { isClicked && (\n            <button\n              className=\"button-next\"\n              data-testid=\"btn-next\"\n              type=\"button\"\n              onClick={ this.nextQuestion }\n            >\n              Próxima\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTriviaQuestions: () => dispatch(actions.fetchTriviaQuestions()),\n});\n\nconst mapStateToProps = (state) => ({\n  questions: state.quiz.questions,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}