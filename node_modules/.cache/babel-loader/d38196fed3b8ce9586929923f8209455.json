{"ast":null,"code":"var _jsxFileName = \"/home/caio/Projects/Javascript/trivia/src/pages/Login.jsx\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport actions from '../actions';\nimport celular from \"./celular.svg\";\nimport '../Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: ''\n    };\n    this.handle = this.handle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handle({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          name = _this$state.name;\n    const fetchTrivia = this.props.fetchTriviaToken;\n    fetchTrivia();\n    actions.savePlayer(email, name);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email;\n    const validEmail = new RegExp(/[\\w\\d]+@[\\w\\d]+[.]com+/);\n    return React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image-container\",\n      src: celular,\n      alt: \"celular\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handle,\n      value: name,\n      name: \"name\",\n      type: \"text\",\n      \"data-testid\": \"input-player-name\",\n      placeholder: \"Digite seu nome...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handle,\n      value: email,\n      name: \"email\",\n      type: \"text\",\n      \"data-testid\": \"input-gravatar-email\",\n      placeholder: \"Digite seu email...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\")), React.createElement(Link, {\n      to: \"/game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      disabled: !(name && validEmail.test(email)),\n      \"data-testid\": \"btn-play\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Jogar\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  fetchTriviaToken: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTriviaToken: () => dispatch(actions.fetchTriviaToken())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/caio/Projects/Javascript/trivia/src/pages/Login.jsx"],"names":["PropTypes","React","Link","connect","actions","Login","Component","constructor","state","name","email","handle","bind","handleSubmit","target","value","setState","fetchTrivia","props","fetchTriviaToken","savePlayer","render","validEmail","RegExp","celular","test","propTypes","func","isRequired","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport actions from '../actions';\nimport celular from './celular.svg';\nimport '../Login.css';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n    this.handle = this.handle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handle({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit() {\n    const { email, name } = this.state;\n    const { fetchTriviaToken: fetchTrivia } = this.props;\n    fetchTrivia();\n    actions.savePlayer(email, name);\n  }\n\n  render() {\n    const { name, email } = this.state;\n    const validEmail = new RegExp(/[\\w\\d]+@[\\w\\d]+[.]com+/);\n    return (\n      <div className=\"main-content\">\n        <img className=\"image-container\" src={ celular } alt=\"celular\" />\n        <div className=\"input-container\">\n          <input\n            onChange={ this.handle }\n            value={ name }\n            name=\"name\"\n            type=\"text\"\n            data-testid=\"input-player-name\"\n            placeholder=\"Digite seu nome...\"\n          />\n          <input\n            onChange={ this.handle }\n            value={ email }\n            name=\"email\"\n            type=\"text\"\n            data-testid=\"input-gravatar-email\"\n            placeholder=\"Digite seu email...\"\n          />\n        </div>\n        <div className=\"btn-container\">\n          <Link to=\"/settings\">\n            <button\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ this.handleSubmit }\n            >\n              Configurações\n            </button>\n          </Link>\n          <Link to=\"/game\">\n            <button\n              type=\"button\"\n              disabled={ !(name && validEmail.test(email)) }\n              data-testid=\"btn-play\"\n              onClick={ this.handleSubmit }\n            >\n              Jogar\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  fetchTriviaToken: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTriviaToken: () => dispatch(actions.fetchTriviaToken()),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}